{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"lede","properties":{},"children":[{"type":"text","value":"Use "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Expandable"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableChildren"}]},{"type":"text","value":", and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":" to show an initial subset of elements. The remaining will be hidden and can be expanded by the user."}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"usage"},"children":[{"type":"element","tagName":"a","properties":{"href":"#usage","ariaLabel":"usage permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Usage"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"live-code","properties":{"code":"() => {\n  const colors = [ \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"]\n  \n  return (\n    <div className=\"y-spacing\">\n      <Expandable>\n        <ExpandableButton name=\"colors\" count={colors.length} />\n\n        <ul>\n          <ExpandableChildren show={3}>\n            {colors.map((color, key) => <li key={key}>{color}</li>)}\n          </ExpandableChildren>\n        </ul>\n      </Expandable>\n    </div>\n  )\n}","compiled":"\"use strict\";\n\n(function () {\n  var colors = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"];\n\n  return React.createElement(\n    \"div\",\n    { className: \"y-spacing\" },\n    React.createElement(\n      Expandable,\n      null,\n      React.createElement(ExpandableButton, { name: \"colors\", count: colors.length }),\n      React.createElement(\n        \"ul\",\n        null,\n        React.createElement(\n          ExpandableChildren,\n          { show: 3 },\n          colors.map(function (color, key) {\n            return React.createElement(\n              \"li\",\n              { key: key },\n              color\n            );\n          })\n        )\n      )\n    )\n  );\n});"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableChildren"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":" must be children of "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Expandable"}]},{"type":"text","value":". "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Expandable"}]},{"type":"text","value":" cannot be a child of another "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Expandable"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"expandablebutton"},"children":[{"type":"element","tagName":"a","properties":{"href":"#expandablebutton","ariaLabel":"expandablebutton permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":" is the same as a regular "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Button"}]},{"type":"text","value":". See "},{"type":"element","tagName":"gatsby-link","properties":{"to":"/button"},"children":[{"type":"text","value":"Button component"}]},{"type":"text","value":" for docs."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"expandable-props"},"children":[{"type":"element","tagName":"a","properties":{"href":"#expandable-props","ariaLabel":"expandable props permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Expandable props"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tagName":"research-insight","properties":{},"children":[{"type":"text","value":"\n    Avoid generic labels. Users much prefered and could predict behavor when including the name and count when expanding abbreviated content.\n  "}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"name"},"children":[{"type":"element","tagName":"a","properties":{"href":"#name","ariaLabel":"name permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"name"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" to include the name in the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":" text."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"live-code","properties":{"code":"() => {\n  const colors = [ \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"]\n  \n  return (\n    <div className=\"y-spacing\">\n      <Expandable>\n        <ul>\n          <ExpandableChildren show={1}>\n            {colors.map((color, key) => <li key={key}>{color}</li>)}\n          </ExpandableChildren>\n        </ul>\n\n        <ExpandableButton name=\"colors\" count={COLORS.length} small />\n      </Expandable>\n    </div>\n  )\n}","compiled":"\"use strict\";\n\n(function () {\n  var colors = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"];\n\n  return React.createElement(\n    \"div\",\n    { className: \"y-spacing\" },\n    React.createElement(\n      Expandable,\n      null,\n      React.createElement(\n        \"ul\",\n        null,\n        React.createElement(\n          ExpandableChildren,\n          { show: 1 },\n          colors.map(function (color, key) {\n            return React.createElement(\n              \"li\",\n              { key: key },\n              color\n            );\n          })\n        )\n      ),\n      React.createElement(ExpandableButton, { name: \"colors\", count: COLORS.length, small: true })\n    )\n  );\n});"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"count"},"children":[{"type":"element","tagName":"a","properties":{"href":"#count","ariaLabel":"count permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"count"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count"}]},{"type":"text","value":" to include the count of items in the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ExpandableButton"}]},{"type":"text","value":" text."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"live-code","properties":{"code":"() => {\n  const colors = [ \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"]\n  \n  return (\n    <div className=\"y-spacing\">\n      <Expandable>\n        <ExpandableButton name=\"colors\" count={COLORS.length} small kind=\"secondary\" />\n\n        <ul>\n          <ExpandableChildren show={1}>\n            {colors.map((color, key) => <li key={key}>{color}</li>)}\n          </ExpandableChildren>\n        </ul>\n      </Expandable>\n    </div>\n  )\n}","compiled":"\"use strict\";\n\n(function () {\n  var colors = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"];\n\n  return React.createElement(\n    \"div\",\n    { className: \"y-spacing\" },\n    React.createElement(\n      Expandable,\n      null,\n      React.createElement(ExpandableButton, { name: \"colors\", count: COLORS.length, small: true, kind: \"secondary\" }),\n      React.createElement(\n        \"ul\",\n        null,\n        React.createElement(\n          ExpandableChildren,\n          { show: 1 },\n          colors.map(function (color, key) {\n            return React.createElement(\n              \"li\",\n              { key: key },\n              color\n            );\n          })\n        )\n      )\n    )\n  );\n});"},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"show"},"children":[{"type":"element","tagName":"a","properties":{"href":"#show","ariaLabel":"show permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":16,"version":"1.1","viewBox":"0 0 16 16","width":16},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"show"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"show"}]},{"type":"text","value":" to define how many items are showed at inital render."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"live-code","properties":{"code":"() => {\n  const colors = [ \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"]\n  \n  return (\n    <div className=\"y-spacing\">\n      <Expandable>\n        <ExpandableButton name=\"colors\" />\n\n        <ul>\n          <ExpandableChildren show={3}>\n            {colors.map((color, key) => <li key={key}>{color}</li>)}\n          </ExpandableChildren>\n        </ul>\n      </Expandable>\n    </div>\n  )\n}","compiled":"\"use strict\";\n\n(function () {\n  var colors = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Indigo\", \"Violet\", \"Purple\", \"Magenta\", \"Pink\", \"Brown\", \"White\", \"Gray\", \"Black\"];\n\n  return React.createElement(\n    \"div\",\n    { className: \"y-spacing\" },\n    React.createElement(\n      Expandable,\n      null,\n      React.createElement(ExpandableButton, { name: \"colors\" }),\n      React.createElement(\n        \"ul\",\n        null,\n        React.createElement(\n          ExpandableChildren,\n          { show: 3 },\n          colors.map(function (color, key) {\n            return React.createElement(\n              \"li\",\n              { key: key },\n              color\n            );\n          })\n        )\n      )\n    )\n  );\n});"},"children":[]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Expandable"},"fields":{"slug":"expandable"},"headings":[{"depth":2,"value":"Usage"},{"depth":2,"value":"ExpandableButton"},{"depth":2,"value":"Expandable props"},{"depth":3,"value":"name"},{"depth":3,"value":"count"},{"depth":3,"value":"show"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"expandable"}}