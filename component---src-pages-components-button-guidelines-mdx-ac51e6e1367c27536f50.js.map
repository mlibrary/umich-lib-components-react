{"version":3,"sources":["webpack:///./src/pages/components/button/guidelines.mdx","webpack:///./src/components/prose.js","webpack:///./src/components/doc.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","lede","parentName","ySpacing","kind","dont","css","icon","title","style","marginRight","isMDXComponent","Prose","marginBottom","SPACING","marginTop","ContentContainer","DocHeaderContainer","activeStyle","borderBottom","COLORS","teal","fontWeight","isActive","isPartiallyCurrent","href","location","pathname","match","StyledNavLink","GatsbyLink","color","neutral","display","padding","textDecoration","Doc","github_path","pageContext","frontmatter","navigation","replace","level","size","paddingBottom","map","text","to","key","L","getProps","children"],"mappings":"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","file":"component---src-pages-components-button-guidelines-mdx-ac51e6e1367c27536f50.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/mlibrary/umich-lib-ui/packages/docs/src/components/doc.js\";\nimport { Text, Button, Icon, TextInput } from '@umich-lib/core';\nimport { Dos, Do, DoHeading, DoExample } from '../../../components/dos-and-donts';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <Text lede mdxType=\"Text\">Buttons are used to make actions visible and easy to perform with one click, tap, or keypress. They contain a clear label and, sometimes, an icon.</Text>\n    <h2>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Button labels should clearly indicate what will happen when a user clicks or touches it.`}</li>\n      <li parentName=\"ul\">{`Use active verbs such as Add, Delete, or Save.`}</li>\n      <li parentName=\"ul\">{`Do not use buttons as navigational elements. Instead, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/link/code\"\n        }}>{`links`}</a>{` when the action will take a user to a new page.`}</li>\n      <li parentName=\"ul\">{`Button labels should be written in sentence case.`}</li>\n      <li parentName=\"ul\">{`Aim for three words or less and never more than five.`}</li>\n      <li parentName=\"ul\">{`Avoid vague button labels. For related buttons, use specific labels such as “Save” and “Discard” instead of “Ok” and “Cancel”.`}</li>\n      <li parentName=\"ul\">{`Include hover and focus states that are unique from the resting state.`}</li>\n      <li parentName=\"ul\">{`Avoid wrapping button labels. For best legibility, a label should remain on a single line.`}</li>\n      <li parentName=\"ul\">{`Icons may be used to convey meaning and draw more attention. The icon comes before the text label. Never use more than one icon per button.`}</li>\n    </ul>\n    <h2>{`Examples`}</h2>\n    <Dos mdxType=\"Dos\">\n  <Do mdxType=\"Do\">\n    <DoHeading mdxType=\"DoHeading\">\n      place a secondary button (more emphasis) next to a tertiary button (less emphasis).\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button mdxType=\"Button\">Save</Button>\n      <Button kind=\"tertiary\" mdxType=\"Button\">Cancel</Button>\n    </DoExample>\n  </Do>\n  <Do dont mdxType=\"Do\">\n    <DoHeading dont mdxType=\"DoHeading\">\n      place a two secondary buttons or two primary buttons next to each other.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button css={{\n            marginRight: '0.75rem'\n          }} mdxType=\"Button\">Save</Button>\n      <Button mdxType=\"Button\">Cancel</Button>\n    </DoExample>\n  </Do>\n  <Do mdxType=\"Do\">\n    <DoHeading mdxType=\"DoHeading\">\n      use the subtle button for several actions that appear next to each other.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"subtle\" mdxType=\"Button\">Edit</Button>\n      <Button kind=\"subtle\" mdxType=\"Button\">View</Button>\n      <Button kind=\"subtle\" mdxType=\"Button\">Export</Button>\n    </DoExample>\n  </Do>\n  <Do dont mdxType=\"Do\">\n    <DoHeading dont mdxType=\"DoHeading\">\n      use more than one primary action button per screen.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"primary\" mdxType=\"Button\">Edit</Button>\n      <Button kind=\"primary\" mdxType=\"Button\">View</Button>\n      <Button kind=\"primary\" mdxType=\"Button\">Export</Button>\n    </DoExample>\n  </Do>\n  <Do mdxType=\"Do\">\n    <DoHeading mdxType=\"DoHeading\">\n      use icons that are meaningful and clearly connect with the label.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"primary\" mdxType=\"Button\"><Icon icon=\"search\" css={{\n              marginRight: '0.25rem'\n            }} mdxType=\"Icon\" />Search</Button>\n    </DoExample>\n  </Do>\n  <Do dont mdxType=\"Do\">\n    <DoHeading dont mdxType=\"DoHeading\">\n      force icons into button labels just for the sake of using an icon.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"primary\" mdxType=\"Button\"><Icon icon=\"remove_red_eye\" css={{\n              marginRight: '0.25rem'\n            }} mdxType=\"Icon\" /> Show all holdings</Button>\n    </DoExample>\n  </Do>\n  <Do mdxType=\"Do\">\n    <DoHeading mdxType=\"DoHeading\">\n      use the icon-only button when space is limited and the icon’s meaning is very straightforward.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"primary\" mdxType=\"Button\"><Icon icon=\"search\" title=\"Search\" mdxType=\"Icon\" /></Button>\n    </DoExample>\n  </Do>\n  <Do dont mdxType=\"Do\">\n    <DoHeading dont mdxType=\"DoHeading\">\n      use the icon-only button if the icon may have multiple meanings. It is better to include a text label whenever space allows.\n    </DoHeading>\n    <DoExample ySpacing mdxType=\"DoExample\">\n      <Button kind=\"primary\" mdxType=\"Button\"><Icon icon=\"remove_red_eye\" mdxType=\"Icon\" /></Button>\n    </DoExample>\n  </Do>\n    </Dos>\n    <h2>{`Primary button`}</h2>\n    <p>{`Use the primary button to call attention to the strongest action on the screen. The primary button should only appear once per screen, but not every screen requires a primary button.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button kind=\"primary\">Search</Button>\n`}</code></pre>\n    <h2>{`Secondary button`}</h2>\n    <p>{`Use secondary for actions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button kind=\"secondary\">Search</Button>\n`}</code></pre>\n    <h2>{`Tertiary button`}</h2>\n    <p>{`Use this button when less visual weight is appropriate. The tertiary button should also be used alongside the secondary button when one action requires more emphasis than the other. For example, `}<strong parentName=\"p\">{`Save`}</strong>{` (more emphasis; secondary style) versus `}<strong parentName=\"p\">{`Cancel`}</strong>{` (less emphasis; tertiary style).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button kind=\"tertiary\">Cancel</Button>\n`}</code></pre>\n    <h2>{`Subtle button`}</h2>\n    <p>{`Use this button for less important actions or for several actions that appear next to each other.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button kind=\"subtle\">Cancel</Button>\n`}</code></pre>\n    <h2>{`Button with Icons`}</h2>\n    <p>{`Use icons before the label in any button type to draw more attention to it or to convey meaning.`}</p>\n    <div css={{\n      display: 'flex',\n      '& > *': {\n        marginRight: '1rem'\n      }\n    }}>\n  <Button kind=\"primary\" mdxType=\"Button\"><Icon icon=\"search\" style={{\n          marginRight: '0.25rem'\n        }} mdxType=\"Icon\" />Search</Button>\n  <Button kind=\"secondary\" mdxType=\"Button\"><Icon icon=\"star_border\" style={{\n          marginRight: '0.25rem'\n        }} mdxType=\"Icon\" />Save</Button>\n  <Button kind=\"tertiary\" mdxType=\"Button\"><Icon icon=\"chat\" style={{\n          marginRight: '0.25rem'\n        }} mdxType=\"Icon\" />Comment</Button>\n  <Button kind=\"subtle\" mdxType=\"Button\"><Icon icon=\"filter\" style={{\n          marginRight: '0.25rem'\n        }} mdxType=\"Icon\" />Copy</Button>\n    </div>\n    <h2>{`Icon-only button`}</h2>\n    <p>{`Some buttons may contain only an icon. These should be used sparingly, and only in cases when an icon is very straightforward and easy to understand.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Button kind=\"primary\">\n  <Icon icon=\"search\" title=\"Search\" />\n</Button>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import styled from '@emotion/styled'\nimport {\n  SPACING,\n  List\n} from '@umich-lib/core'\n\n\nconst Prose = styled(\"div\")({\n  \"> div > *\": {\n    marginBottom: SPACING[\"M\"]\n  },\n  \"> h2:not(:last-child)\": {\n    marginTop: SPACING[\"2XL\"]\n  },\n  \"> h3:not(:last-child)\": {\n    marginTop: SPACING[\"XL\"]\n  },\n  \"> h4:not(:last-child)\": {\n    marginTop: SPACING[\"XL\"]\n  },\n  \"> h5:not(:last-child)\": {\n    marginTop: SPACING[\"XL\"]\n  }\n});\n\nexport default Prose","import React from 'react'\nimport { Link as GatsbyLink } from 'gatsby'\nimport styled from '@emotion/styled'\nimport {\n  Heading,\n  COLORS,\n  SPACING,\n  TYPOGRAPHY,\n  Margins,\n  Link\n} from '@umich-lib/core'\n\nimport Layout from './layout'\nimport SEO from './seo'\nimport Prose from './prose'\n\nconst ContentContainer = styled('div')({\n  maxWidth: '1024px'\n})\n\nconst DocHeaderContainer = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  flexDirection: 'column',\n  height: 'auto'\n})\n\nconst activeStyle={\n  borderBottom: `solid 4px ${COLORS.teal[400]}`,\n  fontWeight: '800'\n}\n\nconst isActive = ({\n  isPartiallyCurrent, href, location\n}) => {\n  return ( isPartiallyCurrent && location.pathname.match(href + '/?$') )\n    ? {style: activeStyle}\n    : {}\n}\n\nconst StyledNavLink = styled(GatsbyLink)({\n  color: COLORS.neutral[400],\n  display: 'inline-block',\n  padding: `${SPACING['XS']} 0`,\n  textDecoration: 'none',\n  fontWeight: '600'\n})\n\nconst Doc = (props) => {\n  const {\n    title,\n    navigation\n  } = props.pageContext.frontmatter\n  const { location } = props\n\n  let github_path\n  if (location.pathname) {\n    github_path =\n    'https://github.com/mlibrary/umich-lib-ui/tree/master/packages/docs/src/pages'\n    + location.pathname.replace(/\\/$/, \"\")\n    + '.mdx'\n  }\n\n  return (\n    <Layout>\n      <article>\n        <SEO title={title} />\n        <DocHeaderContainer>\n          <Margins>\n            <ContentContainer>\n              <Heading level={1} size=\"3XL\" style={{\n                paddingBottom: SPACING['M'],\n                marginTop: SPACING['2XL']\n              }}>{title}</Heading>\n              {navigation && (\n                <ol css={{\n                  borderBottom: `solid 1px ${COLORS.neutral[100]}`\n                }}>\n                  {navigation.map(({text, to}) => (\n                    <li\n                      key={text + to}\n                      style={{\n                        display: 'inline-block',\n                        marginRight: SPACING.L\n                      }}\n                    ><StyledNavLink\n                      to={to}\n                      getProps={isActive}\n                    >{text}</StyledNavLink></li>\n                  ))}\n                </ol>\n              )}\n            </ContentContainer>\n          </Margins>\n        </DocHeaderContainer>\n        <Margins>\n          <ContentContainer\n            style={{\n              marginTop: SPACING['XL'],\n              marginBottom: SPACING['2XL']\n            }}\n          >\n            <Prose>\n              {props.children}\n            </Prose>\n\n            {github_path && (\n              <div style={{\n                display: 'block',\n                marginTop: SPACING['XL']\n              }}>\n                <Link href={github_path}>Edit this page on Github</Link>\n              </div>\n            )}\n          </ContentContainer>\n        </Margins>\n      </article>\n    </Layout>\n  )\n}\n\nexport default Doc"],"sourceRoot":""}