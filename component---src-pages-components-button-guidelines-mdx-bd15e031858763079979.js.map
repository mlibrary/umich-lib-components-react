{"version":3,"sources":["webpack:///./src/pages/components/button/guidelines.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","lede","parentName","ySpacing","kind","dont","css","icon","title","style","marginRight","React","Component","isMDXComponent","_frontmatter"],"mappings":"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","file":"component---src-pages-components-button-guidelines-mdx-bd15e031858763079979.js","sourcesContent":["import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n\n\n  import DefaultLayout from \"/home/travis/build/mlibrary/umich-lib-ui/packages/docs/src/components/doc.js\";\nimport { Text, Button, Icon, TextInput } from '@umich-lib/core';\nimport { Dos, Do, DoHeading, DoExample } from '../../../components/dos-and-donts';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n\n      <Text lede>Buttons are used to make actions visible and easy to perform with one click, tap, or keypress. They contain a clear label and, sometimes, an icon.</Text>\n      <MDXTag name=\"h2\" components={components}>{`Best practices`}</MDXTag>\n      <MDXTag name=\"ul\" components={components}>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Button labels should clearly indicate what will happen when a user clicks or touches it.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use active verbs such as Add, Delete, or Save.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Do not use buttons as navigational elements. Instead, use `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\n            \"href\": \"/components/link/code\"\n          }}>{`links`}</MDXTag>{` when the action will take a user to a new page.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Button labels should be written in sentence case.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Aim for three words or less and never more than five.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Avoid vague button labels. For related buttons, use specific labels such as “Save” and “Discard” instead of “Ok” and “Cancel”.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Include hover and focus states that are unique from the resting state.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Avoid wrapping button labels. For best legibility, a label should remain on a single line.`}</MDXTag>\n        <MDXTag name=\"li\" components={components} parentName=\"ul\">{`Icons may be used to convey meaning and draw more attention. The icon comes before the text label. Never use more than one icon per button.`}</MDXTag>\n      </MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Examples`}</MDXTag>\n      <Dos>\n  <Do>\n    <DoHeading>\n      place a secondary button (more emphasis) next to a tertiary button (less emphasis).\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button>Save</Button>\n      <Button kind=\"tertiary\">Cancel</Button>\n    </DoExample>\n  </Do>\n  <Do dont>\n    <DoHeading dont>\n      place a two secondary buttons or two primary buttons next to each other.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button css={{\n              marginRight: '0.75rem'\n            }}>Save</Button>\n      <Button>Cancel</Button>\n    </DoExample>\n  </Do>\n  <Do>\n    <DoHeading>\n      use the subtle button for several actions that appear next to each other.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"subtle\">Edit</Button>\n      <Button kind=\"subtle\">View</Button>\n      <Button kind=\"subtle\">Export</Button>\n    </DoExample>\n  </Do>\n  <Do dont>\n    <DoHeading dont>\n      use more than one primary action button per screen.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"primary\">Edit</Button>\n      <Button kind=\"primary\">View</Button>\n      <Button kind=\"primary\">Export</Button>\n    </DoExample>\n  </Do>\n  <Do>\n    <DoHeading>\n      use icons that are meaningful and clearly connect with the label.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"primary\"><Icon icon=\"search\" css={{\n                marginRight: '0.25rem'\n              }} />Search</Button>\n    </DoExample>\n  </Do>\n  <Do dont>\n    <DoHeading dont>\n      force icons into button labels just for the sake of using an icon.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"primary\"><Icon icon=\"remove_red_eye\" css={{\n                marginRight: '0.25rem'\n              }} /> Show all holdings</Button>\n    </DoExample>\n  </Do>\n  <Do>\n    <DoHeading>\n      use the icon-only button when space is limited and the icon’s meaning is very straightforward.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"primary\"><Icon icon=\"search\" title=\"Search\" /></Button>\n    </DoExample>\n  </Do>\n  <Do dont>\n    <DoHeading dont>\n      use the icon-only button if the icon may have multiple meanings. It is better to include a text label whenever space allows.\n    </DoHeading>\n    <DoExample ySpacing>\n      <Button kind=\"primary\"><Icon icon=\"remove_red_eye\" /></Button>\n    </DoExample>\n  </Do>\n      </Dos>\n      <MDXTag name=\"h2\" components={components}>{`Primary button`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Use the primary button to call attention to the strongest action on the screen. The primary button should only appear once per screen, but not every screen requires a primary button.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Button kind=\"primary\">Search</Button>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Secondary button`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Use secondary for actions.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Button kind=\"secondary\">Search</Button>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Tertiary button`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Use this button when less visual weight is appropriate. The tertiary button should also be used alongside the secondary button when one action requires more emphasis than the other. For example, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Save`}</MDXTag>{` (more emphasis; secondary style) versus `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Cancel`}</MDXTag>{` (less emphasis; tertiary style).`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Button kind=\"tertiary\">Cancel</Button>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Subtle button`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Use this button for less important actions or for several actions that appear next to each other.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Button kind=\"subtle\">Cancel</Button>\n`}</MDXTag></MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Button with Icons`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Use icons before the label in any button type to draw more attention to it or to convey meaning.`}</MDXTag>\n      <div css={{\n        display: 'flex',\n        '& > *': {\n          marginRight: '1rem'\n        }\n      }}>\n  <Button kind=\"primary\"><Icon icon=\"search\" style={{\n            marginRight: '0.25rem'\n          }} />Search</Button>\n  <Button kind=\"secondary\"><Icon icon=\"star_border\" style={{\n            marginRight: '0.25rem'\n          }} />Save</Button>\n  <Button kind=\"tertiary\"><Icon icon=\"chat\" style={{\n            marginRight: '0.25rem'\n          }} />Comment</Button>\n  <Button kind=\"subtle\"><Icon icon=\"filter\" style={{\n            marginRight: '0.25rem'\n          }} />Copy</Button>\n      </div>\n      <MDXTag name=\"h2\" components={components}>{`Icon-only button`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Some buttons may contain only an icon. These should be used sparingly, and only in cases when an icon is very straightforward and easy to understand.`}</MDXTag>\n      <MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Button kind=\"primary\">\n  <Icon icon=\"search\" title=\"Search\" />\n</Button>\n`}</MDXTag></MDXTag>\n           </MDXTag>;\n  }\n\n}\nMDXContent.isMDXComponent = true;\nexport const _frontmatter = {};\n      "],"sourceRoot":""}